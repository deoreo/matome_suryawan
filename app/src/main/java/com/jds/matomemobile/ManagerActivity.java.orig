package com.jds.matomemobile;

import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.support.v7.app.ActionBar;
import android.support.v7.app.ActionBarActivity;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.webkit.WebChromeClient;
import android.widget.FrameLayout;
import android.widget.TabWidget;
import android.widget.Toast;

import com.jds.matomemobile.plugin.CustomChromeClient;
import com.jds.matomemobile.plugin.CustomWebView;


public class ManagerActivity extends ActionBarActivity {

    final ActionBar actionBar = getSupportActionBar();
    AlertDialog dialog;
    //define main fragment
    BrowserFragment browserFragment = new BrowserFragment();
    FrameLayout frameLayout;

    public String MAIN_URL = "";
    public String CURRENT_URL = "";
    public String IS_WIFI = "";

    private CustomWebView.OnClickListener mListener;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_manager);
        frameLayout = (FrameLayout) findViewById(R.id.fragment_container);

        if (savedInstanceState == null) {

            getSupportFragmentManager().beginTransaction()
                    .add(R.id.fragment_container, browserFragment)
                    .commit();
        }
    }

    public boolean isInternet() {
        ConnectivityManager cm = (ConnectivityManager) getApplicationContext().getSystemService(Context.CONNECTIVITY_SERVICE);
        NetworkInfo activeNetwork = cm.getActiveNetworkInfo();

        boolean isConnected = activeNetwork != null && activeNetwork.isConnectedOrConnecting();
        return isConnected;
    }

    public void setProgressBar(int progress){
        browserFragment.progressBar.setProgress(progress);

        if(progress >= 100){
            browserFragment.progressBar.setVisibility(View.INVISIBLE);
        } else {
            browserFragment.progressBar.setVisibility(View.VISIBLE);
        }
    }


    public void CheckInternet(){
        if(isInternet() == false){
            AlertDialog.Builder builder = new AlertDialog.Builder(this);
            builder.setTitle("No Internet Connection");
            builder.setCancelable(false);
            builder.setPositiveButton("OK", new DialogInterface.OnClickListener() {
                @Override
                public void onClick(DialogInterface dialogInterface, int i) {
                    dialog.dismiss();
                }
            });
            dialog = builder.create();
            dialog.show();
        }
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_manager, menu);
        return true;
    }

    @Override
    public void onBackPressed() {
<<<<<<< .merge_file_NlSawo

        AppExit();

        /*
       AlertDialog.Builder builder = new AlertDialog.Builder(this);
       builder.setTitle("Quit");
       builder.setCancelable(false);
       builder.setMessage("Are you sure you want to exit?");
       builder.setPositiveButton("Exit", new DialogInterface.OnClickListener() {
           @Override
           public void onClick(DialogInterface dialogInterface, int i) {
                AppExit();
           }
       });
       builder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
           @Override
           public void onClick(DialogInterface dialogInterface, int i) {
                dialog.dismiss();
           }
       });
       dialog = builder.create();
       dialog.show();*/
=======
        if (dialog != null) {
            if (!dialog.isShowing()) {
                AlertDialog.Builder builder = new AlertDialog.Builder(this);
                builder.setTitle("Quit");
                builder.setCancelable(false);
                builder.setMessage("Are you sure you want to exit?");
                builder.setPositiveButton("Exit", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialogInterface, int i) {
                        AppExit();
                    }
                });
                builder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialogInterface, int i) {
                        dialog.dismiss();
                    }
                });
                dialog = builder.create();
                dialog.show();
            }
        } else if (browserFragment.webView.canGoBack()) {
            browserFragment.webView.goBack();
        } else {
            AppExit();
        }
>>>>>>> .merge_file_3UavwY
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    public void AppExit() {
        this.finish();
        Intent intent = new Intent(Intent.ACTION_MAIN);
        intent.addCategory(Intent.CATEGORY_HOME);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        startActivity(intent);
    }
}
